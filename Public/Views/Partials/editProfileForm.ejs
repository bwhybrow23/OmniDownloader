<style>
  .modal {
    display: none; 
    position: fixed; 
    z-index: 1; 
    left: 0;
    top: 0;
    width: 100%; 
    height: 100%; 
    overflow: auto; 
    background-color: rgb(0,0,0); 
    background-color: rgba(0,0,0,0.4); 
  }

  .modal-content {
    background-color: #fefefe;
    margin: 15% auto; 
    padding: 20px;
    border: 1px solid #888;
    width: 40%; 
  }

  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }

  .close:hover,
  .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  }

  form label {
    display: block;
    margin-top: 10px;
  }

  form input,
  form select {
      width: 100%; /* Changed from 50% to 100% for consistent width */
      padding: 5px;
      margin: 5px 0 10px 0;
      box-sizing: border-box; /* Ensures padding and border are included in the element's width */
  }

  form button {
      margin-top: 10px;
      padding: 5px 10px;
      background-color: #4CAF50;
      color: white;
      border: none;
      cursor: pointer;
  }

  form button:hover {
      background-color: #45a049;
  }

  form button[type="button"] {
      background-color: #f44336;
  }

  form button[type="button"]:hover {
      background-color: #da190b;
  }

  .profile-form {
      width: 80%;
      margin: 0 auto;
  }

  .profile-form h2 {
      text-align: center;
  }

</style>

<div id="editProfileModal" class="modal">
  <div class="modal-content">
    <span class="close" onclick="closeForm('editProfileModal')">&times;</span>
    <section class="profile-form" id="editProfileForm">
      <h2>Edit Profile</h2>
      <form id="editProfileFormElement" method="POST">
        <label for="edit_platform">Platform:</label>
        <select id="edit_platform" name="platform" onchange="handleEditPlatformChange()" required>
          <option value="fansly">Fansly</option>
          <option value="onlyfans">OnlyFans</option>
          <option value="candfans">CandFans</option>
        </select>

        <label for="edit_user_id">User ID:</label>
        <input type="text" id="edit_user_id" name="user_id" required>

        <label for="edit_username">Username:</label>
        <input type="text" id="edit_username" name="username" required>

        <label for="edit_media_type">Type of Media:</label>
        <select id="edit_media_type" name="media_type">
          <option value="all">All</option>
          <option value="photos">Photos</option>
          <option value="videos">Videos</option>
        </select>

        <button type="submit">Save Changes</button>
        <button type="button" onclick="closeForm('editProfileModal')">Cancel</button>
      </form>
    </section>
  </div>
</div>

<script>
  async function editProfile(user_id) {
    try {
      // Fetch the profile data for this user_id
      const profile = await getProfileData(user_id);

      const platform = document.getElementById('edit_platform').value;
      const usernameField = document.getElementById('edit_username');
      
      if (profile) {
        // Populate the form fields
        document.getElementById('editProfileFormElement').action = `/profiles/edit/${user_id}`;
        document.getElementById('edit_platform').value = profile.platform;
        document.getElementById('edit_user_id').value = profile.user_id;
        document.getElementById('edit_username').value = profile.username;
        document.getElementById('edit_media_type').value = profile.media_type;

        if (platform === 'fansly') {
          usernameField.required = true;
          usernameField.removeAttribute('disabled');
        } else {
          usernameField.required = false;
          usernameField.setAttribute('disabled', true);
          usernameField.value = document.getElementById('edit_user_id').value;
        }
        
        // Show the modal
        document.getElementById('editProfileModal').style.display = 'block';
      } else {
        alert('There was a problem fetching the profile data.');
      }
    } catch (error) {
      console.error("Error in editProfile function:", error);
      alert('There was a problem fetching the profile data.');
    }
  }

  async function getProfileData(user_id) {
    try {
      const response = await fetch(`/profiles/${user_id}`);
      
      // Check if the response is OK
      if (!response.ok) {
        throw new Error(`Error fetching profile data: ${response.statusText}`);
      }

      // Parse the JSON response
      const profileData = await response.json();
      return profileData;

    } catch (error) {
      console.error('There was a problem with your fetch operation:', error);
      return null;
    }
  }

  function handleEditPlatformChange() {
    const platform = document.getElementById('edit_platform').value;
    const usernameField = document.getElementById('edit_username');
    
    if (platform === 'fansly') {
      usernameField.required = true;
      usernameField.removeAttribute('disabled');
    } else {
      usernameField.required = false;
      usernameField.setAttribute('disabled', true);
      usernameField.value = document.getElementById('edit_user_id').value;
    }
  }

  function closeForm(modalId) {
    document.getElementById(modalId).style.display = 'none';
  }
</script>